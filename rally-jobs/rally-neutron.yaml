{% set image_name = "^cirros.*uec$" %}
---
  Dummy.dummy:
    -
      args:
        sleep: 0.01
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 5
          users_per_tenant: 5
        quotas:
          nova:
            instances: 200
            cores: 200
            ram: -1
            metadata_items: -1
            injected_files: -1
            injected_file_content_bytes: -1
            injected_file_path_bytes: -1
            key_pairs: 500
          cinder:
            gigabytes: -1
            snapshots: -1
            volumes: -1
          neutron:
            network: -1
            subnet: -1
            port: 200
            router: 300
            floatingip: -1
            security_group: -1
            security_group_rule: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_list_networks:
    -
      args:
        network_create_args:
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_list_subnets:
    -
      args:
        network_create_args:
        subnet_create_args:
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 30
        concurrency: 30
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_list_routers:
    -
      args:
        network_create_args:
        subnet_create_args:
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args:
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
             router: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_list_ports:
    -
      args:
        network_create_args:
        port_create_args:
        ports_per_network: 4
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
             router: -1
             port: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_update_networks:
    -
      args:
        network_create_args: {}
        network_update_args:
            admin_state_up: False
            name: "_updated"
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_update_subnets:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.4.0.0/16"
        subnets_per_network: 2
        subnet_update_args:
            enable_dhcp: False
            name: "_subnet_updated"
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 5
          users_per_tenant: 5
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_update_routers:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {}
        router_update_args:
            admin_state_up: False
            name: "_router_updated"
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_update_ports:
    -
      args:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 5
        port_update_args:
            admin_state_up: False
            device_id: "dummy_id"
            device_owner: "dummy_owner"
            name: "_port_updated"
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_delete_networks:
    -
      args:
        network_create_args: {}
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_delete_subnets:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 20

  NeutronNetworks.create_and_delete_routers:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {}
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1
      sla:
          failure_rate:
            max: 20

  NeutronNetworks.create_and_delete_ports:
    -
      args:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 10
      runner:
        type: "constant"
        times: 40
        concurrency: 20
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1
      sla:
        failure_rate:
          max: 20

  Quotas.neutron_update:
    -
      args:
        max_quota: 1024
      runner:
        type: "constant"
        times: 10
        concurrency: 2
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_and_delete_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

    -
      args:
        auto_assign_nic: True
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        network:
          start_cidr: "10.2.0.0/24"
          networks_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_and_list_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
        detailed: True
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_and_bounce_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
        actions:
          -
            hard_reboot: 1
          -
            soft_reboot: 1
          -
            stop_start: 1
          -
            rescue_unrescue: 1
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaServers.snapshot_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaServers.resize_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
        to_flavor:
            name: "m1.small"
        confirm: true
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  NovaSecGroup.create_and_delete_secgroups:
    -
      args:
        security_group_count: 5
        rules_per_security_group: 5
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        quotas:
          neutron:
            security_group: -1
            security_group_rule: -1
      sla:
        failure_rate:
          max: 0

  NovaSecGroup.create_and_list_secgroups:
    -
      args:
        security_group_count: 5
        rules_per_security_group: 5
      runner:
        type: "constant"
        times: 4
        concurrency: 4
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        quotas:
          neutron:
            security_group: -1
            security_group_rule: -1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_delete_volume:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0
    -
      args:
        size: 1
        image:
          name: {{image_name}}
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0
    -
      args:
        size:
          min: 1
          max: 3
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_list_volume:
    -
      args:
        size: 1
        detailed: True
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0
    -
      args:
        size:
          min: 1
          max: 3
        detailed: True
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0
    -
      args:
        size: 1
        detailed: True
        image:
          name: {{image_name}}
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.list_volumes:
    -
      args:
        detailed: True
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 1
        volumes:
          size: 1
          volumes_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_volume:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0
    -
      args:
        size:
          min: 1
          max: 3
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0
    -
      args:
        size: 1
        image:
          name: {{image_name}}
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 2
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_extend_volume:
    -
      args:
        size: 1
        new_size: 2
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0
    -
      args:
        size:
          min: 1
          max: 2
        new_size:
          min: 3
          max: 4
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_from_volume_and_delete_volume:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 0
    -
      args:
        size:
          min: 1
          max: 2
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_delete_snapshot:
    -
      args:
        force: false
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 2
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_list_snapshots:
    -
      args:
        force: False
        detailed: True
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_upload_volume_to_image:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  VMTasks.boot_runcommand_delete:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{image_name}}
        script: "/home/jenkins/.rally/extra/instance_dd_test.sh"
        interpreter: "/bin/sh"
        username: "cirros"
      runner:
        type: "constant"
        times: 4
        concurrency: 2
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        network: {}

  HeatStacks.create_and_delete_stack:
    -
      args:
        template_path: '/home/jenkins/.rally/extra/server_with_ports.yaml.template'
      runner:
        type: "constant"
        times: 3
        concurrency: 3
      context:
        users:
          tenants: 2
          users_per_tenant: 2

  SwiftObjects.create_container_and_object_then_list_objects:
    -
      args:
        objects_per_container: 2
        object_size: 5120
      runner:
        type: "constant"
        times: 2
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        roles:
          - "admin"
      sla:
        failure_rate:
          max: 0

  SwiftObjects.create_container_and_object_then_delete_all:
    -
      args:
        objects_per_container: 5
        object_size: 102400
      runner:
        type: "constant"
        times: 4
        concurrency: 2
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        roles:
          - "admin"
      sla:
        failure_rate:
          max: 0

  SwiftObjects.create_container_and_object_then_download_object:
    -
      args:
        objects_per_container: 5
        object_size: 1024
      runner:
        type: "constant"
        times: 6
        concurrency: 3
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        roles:
          - "admin"
      sla:
        failure_rate:
          max: 0
